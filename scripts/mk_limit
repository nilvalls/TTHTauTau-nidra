#!/usr/bin/env python

import BEAN.DatacardMaker.datacard as datacard
import datacard_histograms

import glob
import os.path
import ROOT as r
import subprocess
import sys

r.gROOT.SetBatch()

ofilename = "temp.root"
ocardname = "temp.card"

invar = "OS/MVA"
outvar = "CFMlpANN"

if len(sys.argv) != 3:
    sys.stderr.write("usage: {p} pattern "
            "categories\n".format(p=os.path.basename(sys.argv[0])))
    sys.exit(1)

pattern = sys.argv[1]
categories = sys.argv[2].split()

of = r.TFile(ofilename, "RECREATE")

new_cs = set()
for c in categories:
    for d in glob.glob(pattern.format(c=c)):
        new_c = "TTL_" + c
        syst = d.split(c)[1]
        infile = r.TFile(os.path.join(d, 'nidra_rawHistos.root'))
        if not infile.IsOpen():
            print "Not processing", d
            continue
        else:
            print "Processing", d
        datacard_histograms.copy_histos(infile, of, invar, outvar, new_c + syst)
        infile.Close()
        new_cs.add(new_c)

cs = map(datacard.split_category_string, list(new_cs))
if len(cs) == 0:
    sys.stderr.write("No categories found for '{p}', "
            "{c}!\n".format(p=pattern, c=categories))
    sys.exit(1)

datacard.log = sys.stdout
datacard.create_datacard(of, open(ocardname, 'w'), outvar, cs, print_summary=True)

of.Close()

proc = subprocess.Popen(["combine", "-M", "Asymptotic", "--minosAlgo", "stepping",
    "-m", "125", "-t", "-1", ocardname], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
proc.wait()
for l in proc.stdout.readlines():
    sys.stdout.write(l)
